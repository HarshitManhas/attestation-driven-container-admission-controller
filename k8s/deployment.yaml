apiVersion: apps/v1
kind: Deployment
metadata:
  name: attestation-admission-controller
  namespace: default
  labels:
    app: attestation-admission-controller
spec:
  replicas: 1
  selector:
    matchLabels:
      app: attestation-admission-controller
  template:
    metadata:
      labels:
        app: attestation-admission-controller
    spec:
      containers:
      - name: webhook
        image: attestation-admission-controller:latest
        imagePullPolicy: Never  # Use local image built with minikube docker
        ports:
        - containerPort: 8443
          name: webhook-api
        volumeMounts:
        - name: webhook-certs
          mountPath: /certs
          readOnly: true
        - name: attestation-config
          mountPath: /etc/attestation
          readOnly: true
        - name: tmp-volume
          mountPath: /tmp
        env:
        - name: TLS_CERT_FILE
          value: /certs/tls.crt
        - name: TLS_PRIVATE_KEY_FILE
          value: /certs/tls.key
        # Attestation configuration
        - name: ATTESTATION_REQUIRE_SIGNATURE
          value: "true"
        - name: ATTESTATION_REQUIRE_TRANSPARENCY_LOG
          value: "true"
        - name: ATTESTATION_REQUIRE_CERT_CHAIN
          value: "false"
        - name: ATTESTATION_MIN_SLSA_LEVEL
          value: "0"
        - name: ATTESTATION_REQUIRE_PROVENANCE
          value: "false"
        - name: ATTESTATION_EXEMPT_NAMESPACES
          value: "kube-system,kube-public,kube-node-lease"
        - name: ATTESTATION_EMERGENCY_BYPASS
          value: "false"
        - name: POLICY_CONFIG_PATH
          value: "/etc/attestation/policy.yaml"
        - name: ATTESTATION_PUBLIC_KEYS
          value: "/etc/attestation/cosign.pub"
        # Cosign configuration
        - name: SIGSTORE_CT_LOG_PUBLIC_KEY_FILE
          value: "/etc/ssl/certs/fulcio-root.crt.pem"
        - name: SIGSTORE_REKOR_PUBLIC_KEY
          value: "/etc/ssl/certs/rekor.pub"
        resources:
          limits:
            memory: 256Mi
            cpu: 200m
          requests:
            memory: 64Mi
            cpu: 50m
        livenessProbe:
          httpGet:
            path: /health
            port: 8443
            scheme: HTTPS
          initialDelaySeconds: 10
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8443
            scheme: HTTPS
          initialDelaySeconds: 5
          periodSeconds: 5
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
      volumes:
      - name: webhook-certs
        secret:
          secretName: webhook-certs
      - name: attestation-config
        configMap:
          name: attestation-config
          optional: true
      - name: tmp-volume
        emptyDir: {}
      securityContext:
        fsGroup: 1000
